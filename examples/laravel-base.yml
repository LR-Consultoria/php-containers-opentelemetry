version: '3.8'

services:
  app:
    image: ghcr.io/lrconsultoria/php-base:8.3-alpine
    container_name: laravel-app
    working_dir: /var/www
    volumes:
      - ./src:/var/www
      - ./configs/php-local.ini:/usr/local/etc/php/conf.d/php-local.ini
    environment:
      APP_ENV: local
      DB_HOST: database
      DB_DATABASE: laravel
      DB_USERNAME: laravel
      DB_PASSWORD: password
      REDIS_HOST: redis
    networks:
      - laravel
    depends_on:
      - database
      - redis

  nginx:
    image: nginx:alpine
    container_name: laravel-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./src:/var/www
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
    networks:
      - laravel
    depends_on:
      - app

  database:
    image: mysql:8.0
    container_name: laravel-db
    ports:
      - "3306:3306"
    environment:
      MYSQL_ROOT_PASSWORD: root_password
      MYSQL_DATABASE: laravel
      MYSQL_USER: laravel
      MYSQL_PASSWORD: password
    volumes:
      - mysql_data:/var/lib/mysql
    networks:
      - laravel

  redis:
    image: redis:alpine
    container_name: laravel-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - laravel

  # Desenvolvimento - Queue Worker
  queue:
    image: ghcr.io/lrconsultoria/php-base:8.3-alpine
    container_name: laravel-queue
    working_dir: /var/www
    volumes:
      - ./src:/var/www
    command: php artisan queue:work --verbose --tries=3 --timeout=90
    environment:
      APP_ENV: local
      DB_HOST: database
      DB_DATABASE: laravel
      DB_USERNAME: laravel
      DB_PASSWORD: password
      REDIS_HOST: redis
    networks:
      - laravel
    depends_on:
      - database
      - redis
    restart: unless-stopped

  # Desenvolvimento - Schedule Runner
  scheduler:
    image: ghcr.io/lrconsultoria/php-base:8.3-alpine
    container_name: laravel-scheduler
    working_dir: /var/www
    volumes:
      - ./src:/var/www
    command: >
      sh -c "while true; do
        php artisan schedule:run --verbose --no-interaction &
        sleep 60
      done"
    environment:
      APP_ENV: local
      DB_HOST: database
      DB_DATABASE: laravel
      DB_USERNAME: laravel
      DB_PASSWORD: password
      REDIS_HOST: redis
    networks:
      - laravel
    depends_on:
      - database
      - redis
    restart: unless-stopped

volumes:
  mysql_data:
  redis_data:

networks:
  laravel:
    driver: bridge
